name: üöÄ Deploy to CPANEL & DigitalOcean

on:
  push:
    branches:
      - master
      - staging
      - development
      - auto-update

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH Keys
        run: |
          mkdir -p ~/.ssh

          # üîë Add CPANEL Private Key
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/cpanel_key
          chmod 600 ~/.ssh/cpanel_key

          # üîë Add DigitalOcean Private Key
          echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/digitalocean_key
          chmod 600 ~/.ssh/digitalocean_key

          # üñ•Ô∏è Add known hosts
          ssh-keyscan -H ${{ secrets.CPANEL_SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.DIGITALOCEAN_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          echo "üîç Testing SSH Connection..."
          ssh -i ~/.ssh/cpanel_key -o StrictHostKeyChecking=no ${{ secrets.CPANEL_SSH_USER }}@${{ secrets.CPANEL_SSH_HOST }} "echo '‚úÖ CPANEL SSH connection successful'"
          ssh -i ~/.ssh/digitalocean_key -o StrictHostKeyChecking=no ${{ secrets.DIGITALOCEAN_SSH_USER }}@${{ secrets.DIGITALOCEAN_SSH_HOST }} "echo '‚úÖ DigitalOcean SSH connection successful'"

      - name: Deploy to CPANEL (Staging/Development/Auto-Update)
        if: github.ref != 'refs/heads/master'
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          case "$BRANCH_NAME" in
            "staging") DEPLOY_DIR="staging.tagrit.com"; ENV_SECRET="${{ secrets.ENV_STAGING }}" ;;
            "development") DEPLOY_DIR="dev.tagrit.com"; ENV_SECRET="${{ secrets.ENV_DEV }}" ;;
            "auto-update") DEPLOY_DIR="autoupdate.tagrit.com"; ENV_SECRET="${{ secrets.ENV_AUTO_UPDATE }}" ;;
            *) echo "‚ùå Branch not recognized. Exiting..."; exit 1 ;;
          esac
          
          echo "$ENV_SECRET" | ssh -i ~/.ssh/cpanel_key -o StrictHostKeyChecking=no ${{ secrets.CPANEL_SSH_USER }}@${{ secrets.CPANEL_SSH_HOST }} "cat > ~/$DEPLOY_DIR/application/config/.env.$BRANCH_NAME.php"
          
          ssh -i ~/.ssh/cpanel_key -o StrictHostKeyChecking=no ${{ secrets.CPANEL_SSH_USER }}@${{ secrets.CPANEL_SSH_HOST }} << EOF
            echo "üöÄ Deploying branch '$BRANCH_NAME' to $DEPLOY_DIR"
            cd ~/$DEPLOY_DIR || { echo "‚ùå Deployment directory not found!"; exit 1; }
          
            git config --global user.email "kevinamayi20@gmail.com"
            git config --global user.name "KEVINAMAYI"
            git remote set-url origin https://${{ secrets.USER_TOKEN }}@github.com/tagrit/tagrit.git
            git add .
            git commit -m "Auto-commit before reset on \$(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git fetch --all
            git reset --hard origin/$BRANCH_NAME
            git pull origin $BRANCH_NAME --rebase --force
          
            PHP_BIN="/opt/cpanel/ea-php82/root/usr/bin/php"
            echo "üì¶ Running composer install with PHP 8.2..."
            \$PHP_BIN ~/bin/composer install --ignore-platform-req=ext-fileinfo
          
            echo "‚úÖ Deployment to $DEPLOY_DIR completed successfully!"
          EOF

      - name: Deploy to DigitalOcean (Master Branch)
        if: github.ref == 'refs/heads/master'
        run: |
          ENV_SECRET="${{ secrets.ENV_PRODUCTION }}"
          
          echo "$ENV_SECRET" | ssh -i ~/.ssh/digitalocean_key -o StrictHostKeyChecking=no ${{ secrets.DIGITALOCEAN_SSH_USER }}@${{ secrets.DIGITALOCEAN_SSH_HOST }} "cat > /var/www/html/tagrit/application/config/.env.production.php"
          
          ssh -i ~/.ssh/digitalocean_key -o StrictHostKeyChecking=no ${{ secrets.DIGITALOCEAN_SSH_USER }}@${{ secrets.DIGITALOCEAN_SSH_HOST }} << EOF
            echo "üöÄ Deploying master branch to DigitalOcean"
          
            cd /var/www/html || { echo "‚ùå Deployment directory not found!"; exit 1; }
          
            if ls tagrit_backup_*.zip 1> /dev/null 2>&1; then
              mv tagrit_backup_*.zip old_tagrit.zip
              echo "üîÑ Renamed previous backup to old_tagrit.zip"
            fi
          
            BACKUP_NAME="tagrit_backup_\$(date +'%Y%m%d_%H%M%S').zip"
            zip -r \$BACKUP_NAME tagrit
            echo "‚úÖ Backup created: \$BACKUP_NAME"
          
            rm -f old_tagrit.zip tagrit.zip
            echo "üóëÔ∏è Removed old backup file"
          
            cd tagrit || { echo "‚ùå tagrit directory not found!"; exit 1; }
          
            git config --global user.email "kevinamayi20@gmail.com"
            git config --global user.name "KEVINAMAYI"
            git remote set-url origin https://${{ secrets.USER_TOKEN }}@github.com/tagrit/tagrit.git
            git add .
            git commit -m "Auto-commit before reset on \$(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git fetch --all
            git reset --hard origin/master
            git pull origin master --rebase --force
          
            echo "üì¶ Running composer install..."
            composer install --ignore-platform-req=ext-fileinfo
          
            echo "‚úÖ Deployment to DigitalOcean completed successfully!"
          EOF
